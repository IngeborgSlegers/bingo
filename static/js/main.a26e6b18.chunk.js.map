{"version":3,"sources":["Components/Square.jsx","Components/boardData.js","Components/Board.jsx","App.js","reportWebVitals.js","index.js"],"names":["Square","rowIndex","squareIndex","square","gotASquare","className","style","backgroundColor","boolean","onClick","value","boardData","Board","useState","board","setBoard","row","column","coordinates","setCoordinates","bingo","setBingo","prevState","stateCopy","useEffect","checkRow","checkColumn","diagonalLtoR","diagonalRtoL","tallie","forEach","columnIndex","columnArray","map","index","length","textAlign","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a26e6b18.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Square = ({ rowIndex, squareIndex, square, gotASquare }) => {\n  return (\n    <button\n      className=\"square\"\n      style={{ backgroundColor: square.boolean ? \"red\" : null }}\n      onClick={() => gotASquare(rowIndex, squareIndex)}\n    >\n      {square.value}\n    </button>\n  );\n};\n\nexport default Square;\n","const boardData = [\n  [\n    { value: \"One\", boolean: false },\n    { value: \"Two\", boolean: false },\n    { value: \"Three\", boolean: false },\n    { value: \"Four\", boolean: false },\n    { value: \"Five\", boolean: false },\n  ],\n  [\n    { value: \"Six\", boolean: false },\n    { value: \"Seven\", boolean: false },\n    { value: \"Eight\", boolean: false },\n    { value: \"Nine\", boolean: false },\n    { value: \"Ten\", boolean: false },\n  ],\n  [\n    { value: \"Eleven\", boolean: false },\n    { value: \"Twelve\", boolean: false },\n    { value: \"Thirteen\", boolean: false },\n    { value: \"Fourteen\", boolean: false },\n    { value: \"Fifteen\", boolean: false },\n  ],\n  [\n    { value: \"Sixteen\", boolean: false },\n    { value: \"Seventeen\", boolean: false },\n    { value: \"Eighteen\", boolean: false },\n    { value: \"Nineteen\", boolean: false },\n    { value: \"Twenty\", boolean: false },\n  ],\n  [\n    { value: \"Twenty-One\", boolean: false },\n    { value: \"Twenty-Two\", boolean: false },\n    { value: \"Twenty-Three\", boolean: false },\n    { value: \"Twenty-Four\", boolean: false },\n    { value: \"Twenty-Five\", boolean: false },\n  ],\n];\n\nexport default boardData;","import React, { useState, useEffect } from \"react\";\nimport Square from \"./Square\";\nimport boardData from \"./boardData\";\n\nconst Board = () => {\n  const [board, setBoard] = useState(boardData);\n  const [coordinates, setCoordinates] = useState({ row: null, column: null });\n  const [bingo, setBingo] = useState(false);\n\n  const gotASquare = (rowIndex, squareIndex) => {\n    setBoard((prevState) => {\n      let stateCopy = [...prevState];\n      stateCopy[rowIndex][squareIndex].boolean = true;\n      return [...stateCopy];\n    });\n    setCoordinates({ row: rowIndex, column: squareIndex });\n  };\n\n  useEffect(() => {\n    if (coordinates.row || coordinates.column) {\n\n      if(checkRow(coordinates.row) || checkColumn(coordinates.column) || diagonalLtoR() ||diagonalRtoL())\n      {\n        setBingo(true)\n      }\n    }\n  }, [coordinates]); //eslint-disable-line react-hooks/exhaustive-deps \n\n\n  const checkRow = (rowIndex) => {\n    let tallie = 0;\n    board[rowIndex].forEach((square) => {\n      if (square.boolean) tallie += 1;\n    });\n    return tallie === 5;\n  };\n\n  const checkColumn = (columnIndex) => {    \n    let columnArray = board.map((row, index) => {\n      return row[columnIndex];\n    });\n    let tallie = 0;\n    columnArray.forEach((square) => {\n      if (square.boolean) tallie += 1;\n    });\n    return tallie === 5;\n  };\n\n  const diagonalLtoR = () => {\n    // This row currently console.logs a diagonal pattern (1, 7, 13, 19, 25).\n    let tallie = 0;\n    board.forEach((row, index) => {\n      if (row[index].boolean) tallie += 1\n    });\n    return tallie === 5;\n  };\n\n  const diagonalRtoL = () => {\n    // To check the diagonal pattern of the other direction\n    let tallie = 0;\n    board.forEach((row, index) => {\n      if (row[row.length - index - 1].boolean) tallie += 1\n    });\n    return tallie === 5;\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h1>{bingo ? \"BINGO\" : \"No Bingo\"}</h1>\n      <div className=\"game-board\">\n        {board.map((row, rowIndex) => {\n          return (\n            <div className=\"board-row\" key={rowIndex}>\n              {row.map((square, squareIndex) => {\n                return (\n                  <Square\n                    key={squareIndex}\n                    rowIndex={rowIndex}\n                    squareIndex={squareIndex}\n                    square={square}\n                    gotASquare={gotASquare}\n                  />\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","import './App.css';\nimport Board from './Components/Board';\n\nfunction App() {\n  return (\n    <div className=\"game\">\n      <Board/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}